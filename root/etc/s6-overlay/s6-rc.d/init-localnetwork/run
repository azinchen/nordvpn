#!/command/with-contenv sh
# shellcheck shell=sh

set -eu

echo "[INIT-LOCALNETWORK] Starting init-localnetwork script..."

docker_network="$(ip -o addr show dev eth0 | awk '$3 == "inet" {print $4}')"
docker6_network="$(ip -o addr show dev eth0 | awk '$3 == "inet6" {print $4; exit}')"

if [ -n "${docker_network}" ]; then
    iptables -A INPUT -s "${docker_network}" -j ACCEPT
    iptables -A FORWARD -d "${docker_network}" -j ACCEPT
    iptables -A FORWARD -s "${docker_network}" -j ACCEPT
    iptables -A OUTPUT -d "${docker_network}" -j ACCEPT
fi
if [ -n "${docker6_network}" ]; then
    ip6tables -A INPUT -s "${docker6_network}" -j ACCEPT 2>/dev/null
    ip6tables -A FORWARD -d "${docker6_network}" -j ACCEPT 2>/dev/null
    ip6tables -A FORWARD -s "${docker6_network}" -j ACCEPT 2>/dev/null
    ip6tables -A OUTPUT -d "${docker6_network}" -j ACCEPT 2>/dev/null
fi

if [ -n "${docker_network}" ] && [ -n "${NETWORK:-}" ]; then
    echo "[INIT-LOCALNETWORK] Processing custom IPv4 networks from NETWORK variable: ${NETWORK}"
    gw=$(ip route | awk '/default/ {print $3}')
    echo "[INIT-LOCALNETWORK] Using gateway: ${gw}"
    # Convert semicolon/comma separated list to space separated
    networks=$(echo "$NETWORK" | tr ';,' ' ')
    for net in $networks; do
        ip route | grep -q "$net" || ip route add to "$net" via "$gw" dev eth0
        iptables -A INPUT -s "$net" -j ACCEPT
        iptables -A FORWARD -d "$net" -j ACCEPT
        iptables -A FORWARD -s "$net" -j ACCEPT
        iptables -A OUTPUT -d "$net" -j ACCEPT
    done
    echo "[INIT-LOCALNETWORK] Custom IPv4 networks configured"
fi
if [ -n "${docker6_network}" ] && [ -n "${NETWORK6:-}" ]; then
    gw6=$(ip -6 route | awk '/default/{print $3}')
    # Convert semicolon/comma separated list to space separated
    networks6=$(echo "$NETWORK6" | tr ';,' ' ')
    for net6 in $networks6; do
        ip -6 route | grep -q "$net6" || ip -6 route add to "$net6" via "$gw6" dev eth0
        ip6tables -A INPUT -s "$net6" -j ACCEPT
        ip6tables -A FORWARD -d "$net6" -j ACCEPT
        ip6tables -A FORWARD -s "$net6" -j ACCEPT
        ip6tables -A OUTPUT -d "$net6" -j ACCEPT
    done
fi

echo "[INIT-LOCALNETWORK] init-localnetwork script completed successfully"
exit 0
