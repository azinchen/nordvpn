#!/command/with-contenv sh
# shellcheck shell=sh

set -eu

echo "[INIT-FIREWALL] Starting init-firewall script..."
echo "[INIT-FIREWALL] Setting up firewall - everything has to go through the VPN"
iptables -P OUTPUT DROP
iptables -P INPUT DROP
iptables -P FORWARD DROP
ip6tables -P OUTPUT DROP 2>/dev/null
ip6tables -P INPUT DROP 2>/dev/null
ip6tables -P FORWARD DROP 2>/dev/null
echo "[INIT-FIREWALL] Firewall default DROP policies set"

echo "[INIT-FIREWALL] Flushing existing iptables rules"
iptables -F
iptables -X
ip6tables -F 2>/dev/null
ip6tables -X 2>/dev/null
echo "[INIT-FIREWALL] Existing iptables rules flushed"

docker_network="$(ip -o addr show dev eth0 | awk '$3 == "inet" {print $4}')"
docker6_network="$(ip -o addr show dev eth0 | awk '$3 == "inet6" {print $4; exit}')"
echo "[INIT-FIREWALL] Detected Docker IPv4 network: ${docker_network:-none}"
echo "[INIT-FIREWALL] Detected Docker IPv6 network: ${docker6_network:-none}"

echo "[INIT-FIREWALL] Enabling connection to secure interfaces"
if [ -n "${docker_network}" ]; then
    echo "[INIT-FIREWALL] Setting up IPv4 firewall rules for secure interfaces"
    iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    iptables -A INPUT -i lo -j ACCEPT
    iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    iptables -A FORWARD -i lo -j ACCEPT
    iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    iptables -A OUTPUT -o lo -j ACCEPT
    iptables -A OUTPUT -o tap+ -j ACCEPT
    iptables -A OUTPUT -o tun+ -j ACCEPT
    iptables -t nat -A POSTROUTING -o tap+ -j MASQUERADE
    iptables -t nat -A POSTROUTING -o tun+ -j MASQUERADE
    echo "[INIT-FIREWALL] IPv4 secure interface rules configured"
fi
if [ -n "${docker6_network}" ]; then
    echo "[INIT-FIREWALL] Setting up IPv6 firewall rules for secure interfaces"
    ip6tables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    ip6tables -A INPUT -p icmp -j ACCEPT
    ip6tables -A INPUT -i lo -j ACCEPT
    ip6tables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    ip6tables -A FORWARD -p icmp -j ACCEPT
    ip6tables -A FORWARD -i lo -j ACCEPT
    ip6tables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    ip6tables -A OUTPUT -o lo -j ACCEPT
    ip6tables -A OUTPUT -o tap+ -j ACCEPT
    ip6tables -A OUTPUT -o tun+ -j ACCEPT
    ip6tables -t nat -A POSTROUTING -o tap+ -j MASQUERADE
    ip6tables -t nat -A POSTROUTING -o tun+ -j MASQUERADE
    echo "[INIT-FIREWALL] IPv6 secure interface rules configured"
fi

echo "[INIT-FIREWALL] Enabling connection to nordvpn group"
if [ -n "${docker_network}" ]; then
    echo "[INIT-FIREWALL] Setting up IPv4 nordvpn group rules"
    iptables -A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
    echo "[INIT-FIREWALL] Allowing VPN ports instead of broad GID rule for better security"
    iptables -A OUTPUT -p udp -m udp --dport 1194 -j ACCEPT
    iptables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT
    echo "[INIT-FIREWALL] IPv4 nordvpn group rules configured"
fi
if [ -n "${docker6_network}" ]; then
    echo "[INIT-FIREWALL] Setting up IPv6 nordvpn group rules"
    ip6tables -A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
    echo "[INIT-FIREWALL] Allowing VPN ports instead of broad GID rule for better security"
    ip6tables -A OUTPUT -p udp -m udp --dport 1194 -j ACCEPT
    ip6tables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT
    echo "[INIT-FIREWALL] IPv6 nordvpn group rules configured"
fi

echo "[INIT-FIREWALL] init-firewall script completed successfully"
exit 0
