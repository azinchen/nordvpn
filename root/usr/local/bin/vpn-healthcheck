#!/command/with-contenv sh
# shellcheck shell=sh

set -eu

echo "[VPN-HEALTHCHECK] Starting VPN healthcheck script..."

# Set default values for environment variables
CHECK_CONNECTION_ATTEMPTS="${CHECK_CONNECTION_ATTEMPTS:-3}"
CHECK_CONNECTION_URL="${CHECK_CONNECTION_URL:-https://www.google.com}"
CHECK_CONNECTION_ATTEMPT_INTERVAL="${CHECK_CONNECTION_ATTEMPT_INTERVAL:-5}"

# Validate required variables
if [ -z "$CHECK_CONNECTION_ATTEMPTS" ] || [ "$CHECK_CONNECTION_ATTEMPTS" -le 0 ]; then
    echo "[VPN-HEALTHCHECK] ERROR: CHECK_CONNECTION_ATTEMPTS must be a positive integer"
    exit 1
fi

if [ -z "$CHECK_CONNECTION_URL" ]; then
    echo "[VPN-HEALTHCHECK] ERROR: CHECK_CONNECTION_URL must be set"
    exit 1
fi

if [ -z "$CHECK_CONNECTION_ATTEMPT_INTERVAL" ] || [ "$CHECK_CONNECTION_ATTEMPT_INTERVAL" -le 0 ]; then
    echo "[VPN-HEALTHCHECK] ERROR: CHECK_CONNECTION_ATTEMPT_INTERVAL must be a positive integer"
    exit 1
fi

httpreq()
{
    case "$(curl -s --max-time 2 -I "$1" | sed 's/^[^ ]*  *\([0-9]\).*/\1/; 1q')" in
        [23]) return 0;;
        5) return 1;;
        *) return 1;;
    esac
}

counter=1
while [ $counter -le "$CHECK_CONNECTION_ATTEMPTS" ]; do
    # Convert semicolon separated list to space separated
    oldIFS="$IFS"; IFS=',;'
    for url in $CHECK_CONNECTION_URL; do
        if httpreq "$url"; then
            echo "[VPN-HEALTHCHECK] Connection via VPN is up"
            exit 0
        fi
    done
    IFS="$oldIFS"

    sleep "$CHECK_CONNECTION_ATTEMPT_INTERVAL"
    counter=$((counter + 1))
done

echo "[VPN-HEALTHCHECK] All connection attempts failed, initiating VPN reconnection"
vpn-reconnect
exit 1
